{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Azure.CreateUIDef",
  "version": "0.1.2-preview",
  "parameters": {
    "basics": [
      {
        "name": "vmName",
        "type": "Microsoft.Common.TextBox",
        "label": "Name",
        "toolTip": "The name of the TeamCity virtual machine.",
        "defaultValue": "teamcity",
        "constraints": {
          "required": true,
          "regex": "^[a-z0-9A-Z-]{3,79}$",
          "validationMessage": "The name must be between 3 and 79 characters long and contain letters, numbers, and hyphens only."
        }
      },
      {
        "name": "teamcityVersionType",
        "type": "Microsoft.Common.OptionsGroup",
        "label": "TeamCity version selection type",
        "defaultValue": "Pre-defined",
        "constraints": {
    		"allowedValues": [
      			{
					"label": "Pre-defined",
        			"value": "teamcityVersion"
      			},
      			{
        			"label": "Custom",
        			"value": "teamcityCustomVersion"
      			}
    		],
    		"required": true
  		}
      },
      {
        "name": "teamcityVersion",
        "type": "Microsoft.Common.DropDown",
        "label": "TeamCity version",
        "defaultValue": "2019.2.4",
        "constraints": {
          "allowedValues": [
            {
              "label": "2017.2.3",
              "value": "2017.2.3"
            },
            {
              "label": "2019.2.4",
              "value": "2019.2.4"
            }
          ],
          "required": true
        },
        "visible": "[equals(basics('teamcityVersionType'), 'teamcityVersion')]"
      },
      {
        "name": "teamcityCustomVersion",
        "type": "Microsoft.Common.TextBox",
        "label": "TeamCity version",
        "defaultValue": "",
        "constraints": {
          "required": true
        },
        "visible": "[equals(basics('teamcityVersionType'), 'teamcityCustomVersion')]"
      }
    ],
    "steps": [
      {
        "name": "vmSettings",
        "label": "Virtual Machine Settings",
        "subLabel": {
          "preValidation": "Configure the virtual machine settings",
          "postValidation": "Done"
        },
        "bladeTitle": "Virtual Machine Settings",
        "elements": [
          {
            "name": "adminUsername",
            "type": "Microsoft.Compute.UserNameTextBox",
            "label": "VM user name",
            "toolTip": "Admin username for the TeamCity virtual machine",
            "osPlatform": "Linux",
            "constraints": {
              "required": true
            }
          },
          {
            "name": "SSHCredentials",
            "type": "Microsoft.Compute.CredentialsCombo",
            "label": {
              "authenticationType": "VM authentication type",
              "password": "VM password",
              "confirmPassword": "Confirm VM password",
              "sshPublicKey": "VM SSH public key"
            },
            "toolTip": {
              "authenticationType": "Authentication type for the TeamCity virtual machine",
              "password": "Password for the TeamCity virtual machine",
              "sshPublicKey": "SSH public key for the TeamCity virtual machine"
            },
            "constraints": {
              "required": true
            },
            "options": {
              "hideConfirmation": false
            },
            "osPlatform": "Linux"
          },
          {
            "name": "vmSize",
            "type": "Microsoft.Compute.SizeSelector",
            "label": "Virtual machine size",
            "toolTip": "The size of the virtual machine to provision.",
            "recommendedSizes": [
              "Standard_F2s",
              "Standard_F4s",
              "Standard_A2_v2"
            ],
            "constraints": {
              "allowedSizes": [
                "Standard_A2_v2",
                "Standard_A4_v2",
                "Standard_A8_v2",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "kinvolk",
              "offer": "flatcar-container-linux",
              "sku": "stable",
              "version": "2345.3.1"
            },
            "count": "1"
          },
          {
            "name": "publicIpAddress",
            "type": "Microsoft.Network.PublicIpAddressCombo",
            "label": {
              "publicIpAddress": "Public IP address",
              "domainNameLabel": "Domain name label"
            },
            "toolTip": {
              "publicIpAddress": "Public IP for TeamCity, the name must be unique across the resource group",
              "domainNameLabel": "DNS Prefix for TeamCity, must be globally unique"
            },
            "defaultValue": {
              "publicIpAddressName": "[concat(basics('vmName'), '-ip')]",
              "domainNameLabel": "[concat(basics('vmName'), '-', take(replace(guid(), '-', ''), 10))]"
            },
            "options": {
              "hideExisting": false,
              "hideNone": false
            },
            "constraints": {
              "required": {
                "domainNameLabel": true
              }
            }
          },
          {
            "name": "domainOwnerEmail",
            "type": "Microsoft.Common.TextBox",
            "label": "Domain owner e-mail",
            "toolTip": "E-mail address to report problems regarding SSL certificate issuing for domain.",
            "defaultValue": "",
            "constraints": {
              "regex": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
              "validationMessage": "The value should be valid e-mail address."
            }
          },
          {
            "name": "virtualNetwork",
            "type": "Microsoft.Network.VirtualNetworkCombo",
            "label": {
              "virtualNetwork": "Virtual network",
              "subnets": "Subnets"
            },
            "toolTip": {
              "virtualNetwork": "Name of the virtual network",
              "subnets": "Subnets for the virtual network"
            },
            "defaultValue": {
              "name": "[concat(basics('vmName'), '-vnet')]",
              "addressPrefixSize": "/16"
            },
            "constraints": {
              "minAddressPrefixSize": "/16"
            },
            "subnets": {
              "subnet1": {
                "label": "Subnet",
                "defaultValue": {
                  "name": "[basics('vmName')]",
                  "addressPrefixSize": "/24"
                },
                "constraints": {
                  "minAddressPrefixSize": "/24",
                  "minAddressCount": 12,
                  "requireContiguousAddresses": false
                }
              }
            }
          }
        ]
      },
      {
        "name": "additionalSettings",
        "label": "Additional Settings",
        "subLabel": {
          "preValidation": "Configure the additional settings",
          "postValidation": "Done"
        },
        "bladeTitle": "Additional Settings",
        "elements": [
          {
            "name": "installationSize",
            "type": "Microsoft.Common.DropDown",
            "label": "TeamCity installation size",
            "toolTip": "TeamCity installation size: typical usage for Small - 3 users, 100 builds/day; Medium - 5 users, 300 builds/day; Large - 20 users, 1000 builds/day",
            "defaultValue": "Medium",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Small",
                  "value": "Small"
                },
                {
                  "label": "Medium",
                  "value": "Medium"
                },
                {
                  "label": "Large",
                  "value": "Large"
                }
              ]
            }
          },
          {
            "name": "databasePassword",
            "type": "Microsoft.Common.PasswordBox",
            "label": {
              "password": "MySQL password",
              "confirmPassword": "Confirm MySQL password"
            },
            "constraints": {
              "required": true,
              "regex": "^((?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])|(?=.*[0-9])(?=.*[a-z])(?=.*[!@#$%^&*])|(?=.*[0-9])(?=.*[A-Z])(?=.*[!@#$%^&*])|(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])).{12,128}$",
              "validationMessage": "Password must be at least 12 characters long and have 3 out of the following: one number, one lower case, one upper case, or one special character"
            },
            "options": {
              "hideConfirmation": false
            }
          },
          {
            "name": "storageAccount",
            "type": "Microsoft.Storage.StorageAccountSelector",
            "label": "Storage account",
            "toolTip": "Storage account for TeamCity which could be used in integrations",
            "defaultValue": {
              "type": "Standard_LRS",
              "name": "[concat(replace(basics('vmName'), '-', ''), take(replace(guid(), '-', ''), 10))]"
            },
            "constraints": {
              "allowedTypes": [
                "Standard_LRS",
                "Standard_GRS"
              ]
            }
          }
        ]
      }
    ],
    "outputs": {
      "location": "[location()]",
      "vmName": "[basics('vmName')]",
      "teamcityVersion": "[basics(basics('teamcityVersionType'))]",
      "VMAdminUsername": "[steps('vmSettings').adminUsername]",
      "authenticationType": "[steps('vmSettings').SSHCredentials.authenticationType]",
      "adminPasswordOrKey": "[coalesce(steps('vmSettings').SSHCredentials.password, steps('vmSettings').SSHCredentials.sshPublicKey)]",
      "vmSize": "[steps('vmSettings').vmSize]",
      "virtualNetworkNewOrExisting": "[steps('vmSettings').virtualNetwork.newOrExisting]",
      "virtualNetworkName": "[steps('vmSettings').virtualNetwork.name]",
      "addressPrefixes": "[steps('vmSettings').virtualNetwork.addressPrefixes]",
      "subnetName": "[steps('vmSettings').virtualNetwork.subnets.subnet1.name]",
      "subnetPrefix": "[steps('vmSettings').virtualNetwork.subnets.subnet1.addressPrefix]",
      "virtualNetworkResourceGroupName": "[steps('vmSettings').virtualNetwork.resourceGroup]",
      "publicIpNewOrExisting": "[steps('vmSettings').publicIpAddress.newOrExistingOrNone]",
      "publicIpDns": "[steps('vmSettings').publicIpAddress.domainNameLabel]",
      "publicIpName": "[steps('vmSettings').publicIpAddress.name]",
      "publicIpResourceGroupName": "[steps('vmSettings').publicIpAddress.resourceGroup]",
      "domainOwnerEmail": "[steps('vmSettings').domainOwnerEmail]",
      "installationSize": "[steps('additionalSettings').installationSize]",
      "databasePassword": "[steps('additionalSettings').databasePassword]",
      "storageNewOrExisting": "[steps('additionalSettings').storageAccount.newOrExisting]",
      "storageAccountName": "[steps('additionalSettings').storageAccount.name]",
      "storageAccountType": "[steps('additionalSettings').storageAccount.type]"
    }
  }
}
